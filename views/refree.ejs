<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Badminton Referee Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Enhanced CSS with new color scheme and animations */
        :root {
            --primary-red: #B22222;
            --dark-red: #8B0000;
            --light-red: #DC143C;
            --crimson: #DC143C;
            --burgundy: #800020;
            --white: #ffffff;
            --light-gray: #f8f9fa;
            --gray: #6c757d;
            --dark-gray: #343a40;
            --black: #000000;
            --accent-gold: #FFD700;
            --accent-orange: #ff6600;
            --success: #28a745;
            --warning: #ffc107;
            --danger: #dc3545;
            --shadow-light: 0 2px 10px rgba(178, 34, 34, 0.1);
            --shadow-medium: 0 4px 20px rgba(178, 34, 34, 0.15);
            --shadow-heavy: 0 8px 30px rgba(178, 34, 34, 0.25);
            --gradient-red: linear-gradient(135deg, #B22222 0%, #DC143C 50%, #8B0000 100%);
            --gradient-dark: linear-gradient(135deg, #8B0000 0%, #B22222 50%, #800020 100%);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --transition-fast: all 0.2s ease;
            --border-radius: 12px;
            --border-radius-lg: 20px;
            
            /* Additional variables for layout */
            --sidebar-width: 250px;
            --header-height: 70px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--light-gray);
            color: var(--dark-gray);
            line-height: 1.6;
            min-height: 100vh;
            position: relative;
        }

        /* Sidebar */
        .sidebar {
            width: var(--sidebar-width);
            background: var(--gradient-dark);
            color: var(--white);
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            transition: var(--transition);
            z-index: 1000;
            left: 0;
            box-shadow: var(--shadow-medium);
        }

        .main-content {
            margin-left: var(--sidebar-width);
            width: calc(100% - var(--sidebar-width));
            transition: var(--transition);
        }

        @media (max-width: 768px) {
            .sidebar {
                left: -250px;
            }
            .sidebar.active {
                left: 0;
            }
            .main-content {
                margin-left: 0;
                width: 100%;
            }
            .main-content.sidebar-active {
                margin-left: var(--sidebar-width);
            }
        }

        .sidebar-header {
            padding: 20px;
            text-align: center;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        }

        .sidebar-header .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 700;
            font-size: 1.5rem;
        }

        .logo i {
            margin-right: 10px;
            color: var(--accent-gold);
            animation: pulse 2s infinite;
        }

        .sidebar-menu {
            padding: 20px 0;
        }

        .menu-item {
            padding: 12px 20px;
            display: flex;
            align-items: center;
            cursor: pointer;
            transition: var(--transition);
            border-left: 4px solid transparent;
            position: relative;
            overflow: hidden;
        }

        .menu-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: var(--transition);
        }

        .menu-item:hover::before {
            left: 100%;
        }

        .menu-item:hover {
            background-color: rgba(255, 255, 255, 0.1);
            transform: translateX(5px);
        }

        .menu-item.active {
            background-color: rgba(255, 255, 255, 0.15);
            border-left-color: var(--accent-gold);
        }

        .menu-item i {
            margin-right: 15px;
            width: 20px;
            text-align: center;
        }

        /* Main Content */
        .main-content {
            position: relative;
        }

        /* Header */
        .header {
            background: var(--gradient-red);
            height: var(--header-height);
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 30px;
            box-shadow: var(--shadow-medium);
            position: sticky;
            top: 0;
            z-index: 100;
            flex-wrap: nowrap;
            color: var(--white);
        }

        .page-title {
            font-size: 1.5rem;
            font-weight: 600;
        }

        .header-actions {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .schedule-btn {
            background-color: var(--accent-gold);
            color: var(--dark-red);
            border: none;
            padding: 10px 20px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: var(--transition);
            box-shadow: var(--shadow-light);
        }

        .schedule-btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }

        .user-menu {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
            position: relative;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--accent-gold);
            color: var(--dark-red);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            transition: var(--transition);
        }

        .user-avatar:hover {
            transform: scale(1.1);
        }

        /* Content Area */
        .content {
            padding: 30px;
        }

        /* Dashboard Cards */
        .dashboard-cards {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .card {
            background-color: var(--white);
            border-radius: var(--border-radius);
            padding: 20px;
            box-shadow: var(--shadow-light);
            transition: var(--transition);
            border-top: 4px solid var(--primary-red);
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-medium);
        }

        .stat-card {
            display: flex;
            flex-direction: column;
        }

        .stat-value {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--primary-red);
            margin: 10px 0;
        }

        .stat-label {
            color: var(--gray);
            font-weight: 600;
        }

        .stat-icon {
            align-self: flex-end;
            font-size: 2rem;
            color: var(--primary-red);
            opacity: 0.7;
        }

        /* Section Styles */
        .section {
            background-color: var(--white);
            border-radius: var(--border-radius);
            padding: 25px;
            box-shadow: var(--shadow-light);
            margin-bottom: 30px;
            transition: var(--transition);
        }

        .section:hover {
            box-shadow: var(--shadow-medium);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .section-title {
            font-size: 1.3rem;
            color: var(--primary-red);
            font-weight: 600;
        }

        .section-actions {
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 600;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }

        .btn::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 5px;
            height: 5px;
            background: rgba(255, 255, 255, 0.5);
            opacity: 0;
            border-radius: 100%;
            transform: scale(1, 1) translate(-50%);
            transform-origin: 50% 50%;
        }

        .btn:focus:not(:active)::after {
            animation: ripple 1s ease-out;
        }

        .btn-primary {
            background-color: var(--primary-red);
            color: var(--white);
        }

        .btn-primary:hover {
            background-color: var(--dark-red);
            transform: translateY(-2px);
        }

        .btn-secondary {
            background-color: var(--gray);
            color: var(--white);
        }

        .btn-secondary:hover {
            background-color: var(--dark-gray);
            transform: translateY(-2px);
        }

        .btn-success {
            background-color: var(--success);
            color: var(--white);
        }

        .btn-success:hover {
            background-color: #218838;
            transform: translateY(-2px);
        }

        .btn-warning {
            background-color: var(--warning);
            color: var(--dark-gray);
        }

        .btn-warning:hover {
            background-color: #e0a800;
            transform: translateY(-2px);
        }

        .btn-danger {
            background-color: var(--danger);
            color: var(--white);
        }

        .btn-danger:hover {
            background-color: #c82333;
            transform: translateY(-2px);
        }

        /* Table Styles */
        .table-container {
            overflow-x: auto;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-light);
        }

        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #eee;
        }

        th {
            background-color: var(--light-gray);
            font-weight: 600;
            color: var(--primary-red);
        }

        tr {
            transition: var(--transition-fast);
        }

        tr:hover {
            background-color: rgba(178, 34, 34, 0.05);
        }

        .badge {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .badge-success {
            background-color: #e6f7ee;
            color: var(--success);
        }

        .badge-warning {
            background-color: #fef5e6;
            color: var(--warning);
        }

        .badge-info {
            background-color: #e8f4fd;
            color: var(--primary-red);
        }

        .action-btn {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 5px;
            transition: var(--transition);
        }

        .btn-edit {
            background-color: var(--warning);
            color: var(--white);
        }

        .btn-delete {
            background-color: var(--danger);
            color: var(--white);
        }

        .btn-view {
            background-color: var(--primary-red);
            color: var(--white);
        }

        /* Filter Bar */
        .filter-bar {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .filter-label {
            font-size: 0.9rem;
            color: var(--gray);
        }

        select, input {
            padding: 8px 12px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            font-size: 1rem;
            transition: var(--transition);
        }

        select:focus, input:focus {
            outline: none;
            border-color: var(--primary-red);
            box-shadow: 0 0 0 3px rgba(178, 34, 34, 0.1);
        }

        /* Search Box */
        .search-box {
            position: relative;
            margin-left: auto;
        }

        .search-box input {
            padding-left: 35px;
        }

        .search-box .search-icon {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--gray);
        }

        /* Match Cards */
        .match-cards {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .match-card {
            background-color: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-light);
            overflow: hidden;
            transition: var(--transition);
            cursor: pointer;
            animation: fadeIn 0.5s ease-out;
        }

        .match-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-medium);
        }

        .match-card-header {
            background: var(--gradient-red);
            color: var(--white);
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .match-number {
            font-weight: 700;
            font-size: 1.2rem;
        }

        .match-type {
            background-color: var(--accent-gold);
            color: var(--dark-red);
            padding: 4px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .match-card-body {
            padding: 15px;
        }

        .match-players {
            margin-bottom: 15px;
        }

        .player {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
            padding-bottom: 8px;
            border-bottom: 1px solid #eee;
        }

        .player:last-child {
            margin-bottom: 0;
            padding-bottom: 0;
            border-bottom: none;
        }

        .match-details {
            display: flex;
            justify-content: space-between;
            color: var(--gray);
            font-size: 0.9rem;
        }

        /* Modal Styles */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 2000;
            opacity: 0;
            visibility: hidden;
            transition: var(--transition);
        }

        .modal-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .modal {
            background-color: var(--white);
            border-radius: var(--border-radius-lg);
            width: 90%;
            max-width: 500px;
            max-height: 90vh;
            overflow-y: auto;
            padding: 30px;
            position: relative;
            transform: translateY(-50px) scale(0.9);
            transition: var(--transition);
            box-shadow: var(--shadow-heavy);
        }

        .modal-overlay.active .modal {
            transform: translateY(0) scale(1);
        }

        .close-modal {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--gray);
            transition: var(--transition);
        }

        .close-modal:hover {
            color: var(--primary-red);
            transform: rotate(90deg);
        }

        .modal-title {
            text-align: center;
            margin-bottom: 20px;
            color: var(--primary-red);
            font-weight: 600;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--dark-gray);
        }

        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            font-size: 1rem;
            transition: var(--transition);
        }

        .form-control:focus {
            border-color: var(--primary-red);
            outline: none;
            box-shadow: 0 0 0 3px rgba(178, 34, 34, 0.2);
        }

        .form-row {
            display: flex;
            gap: 15px;
        }

        .form-row .form-group {
            flex: 1;
        }

        /* Current Match Section */
        .current-match {
            background-color: rgba(178, 34, 34, 0.05);
            border-left: 4px solid var(--primary-red);
            animation: pulseBorder 2s infinite;
        }

        .go-btn {
            background-color: var(--success);
            color: var(--white);
            padding: 10px 20px;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: var(--transition);
            box-shadow: var(--shadow-light);
        }

        .go-btn:hover {
            background-color: #218838;
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }

        /* Scorecard Styles */
        .scorecard {
            background-color: var(--white);
            border-radius: var(--border-radius);
            padding: 25px;
            box-shadow: var(--shadow-light);
            margin-bottom: 30px;
        }

        .scorecard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .scorecard-title {
            font-size: 1.5rem;
            color: var(--primary-red);
            font-weight: 600;
        }

        .match-info {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .info-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            background: var(--light-gray);
            padding: 10px 15px;
            border-radius: var(--border-radius);
            min-width: 100px;
        }

        .info-label {
            font-size: 0.9rem;
            color: var(--gray);
        }

        .info-value {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--primary-red);
        }

        .players-container {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
        }

        .player-card {
            flex: 1;
            background-color: var(--light-gray);
            border-radius: var(--border-radius);
            padding: 20px;
            text-align: center;
            position: relative;
            transition: var(--transition);
        }

        .player-card.active {
            background-color: rgba(178, 34, 34, 0.1);
            border: 2px solid var(--primary-red);
            transform: scale(1.02);
        }

        .player-name {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 10px;
            color: var(--dark-gray);
        }

        .player-score {
            font-size: 3rem;
            font-weight: 700;
            color: var(--primary-red);
            transition: var(--transition);
        }

        .score-change {
            animation: scoreBounce 0.5s ease;
        }

        .service-indicator {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 1.5rem;
            color: var(--primary-red);
            animation: servicePulse 2s infinite;
        }

        .score-controls {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-top: 20px;
        }

        .sets-container {
            margin-top: 20px;
        }

        .sets-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 10px;
            text-align: center;
            color: var(--primary-red);
        }

        .sets-table {
            width: 100%;
            border-collapse: collapse;
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: var(--shadow-light);
        }

        .sets-table th, .sets-table td {
            padding: 10px;
            text-align: center;
            border: 1px solid #eee;
        }

        .sets-table th {
            background-color: var(--light-gray);
            color: var(--primary-red);
        }

        .advantage-message {
            text-align: center;
            margin: 15px 0;
            padding: 10px;
            background-color: rgba(255, 193, 7, 0.2);
            border-radius: var(--border-radius);
            font-weight: 600;
            color: var(--dark-gray);
            animation: fadeInOut 2s infinite;
        }

        .game-controls {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }

        /* Responsive Styles */
        @media (max-width: 768px) {
            .header {
                padding: 0 15px;
            }
            
            .content {
                padding: 15px;
            }
            
            .section-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }
            
            .section-actions {
                width: 100%;
                justify-content: flex-end;
            }
            
            .filter-bar {
                flex-direction: column;
            }
            
            .search-box {
                margin-left: 0;
                width: 100%;
            }
            
            .search-box input {
                width: 100%;
            }
            
            .form-row {
                flex-direction: column;
                gap: 0;
            }
            
            .match-cards {
                grid-template-columns: 1fr;
            }
            
            .players-container {
                flex-direction: column;
            }
        }

        /* Toggle for mobile sidebar */
        .menu-toggle {
            display: none;
            font-size: 1.5rem;
            cursor: pointer;
            margin-left: auto;
            transition: var(--transition);
        }

        .menu-toggle:hover {
            color: var(--accent-gold);
        }

        @media (max-width: 768px) {
            .menu-toggle {
                display: block;
                order: 2;
                position: absolute;
                right: 20px;
            }
            .header {
                justify-content: center;
                position: relative;
            }
            .page-title {
                order: 1;
                text-align: center;
            }
            .header-actions {
                order: 3;
            }
            .sidebar {
                left: -250px;
            }
            .sidebar.active {
                left: 0;
            }
            
            .dashboard-cards {
                grid-template-columns: 1fr;
            }
            
            .modal {
                padding: 20px 15px;
            }
            
            .score-controls {
                flex-direction: column;
            }
        }

        /* Confirmation Dialog */
        .confirmation-dialog {
            text-align: center;
            padding: 20px;
        }

        .confirmation-buttons {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
        }

        .btn-cancel {
            background-color: var(--gray);
            color: var(--white);
        }

        .btn-cancel:hover {
            background-color: var(--dark-gray);
        }

        .btn-confirm {
            background-color: var(--success);
            color: var(--white);
        }

        .btn-confirm:hover {
            background-color: #218838;
        }

        /* Overlay for when sidebar is open */
        .overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
            display: none;
        }

        .overlay.active {
            display: block;
        }

        .modal-icon {
            text-align: center;
            font-size: 3rem;
            color: var(--primary-red);
            margin-bottom: 20px;
            animation: bounce 2s infinite;
        }

        .logout-btn {
            background-color: var(--danger);
            color: var(--white);
            border: none;
            padding: 10px 20px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: var(--transition);
            margin-top: 20px;
            width: calc(100% - 40px);
            margin-left: 20px;
            margin-right: 20px;
            justify-content: center;
            box-shadow: var(--shadow-light);
        }

        .logout-btn:hover {
            background-color: #c82333;
            transform: translateY(-2px);
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }

        @keyframes pulseBorder {
            0% { border-left-color: var(--primary-red); }
            50% { border-left-color: var(--accent-gold); }
            100% { border-left-color: var(--primary-red); }
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
            40% { transform: translateY(-10px); }
            60% { transform: translateY(-5px); }
        }

        @keyframes ripple {
            0% {
                transform: scale(0, 0);
                opacity: 1;
            }
            20% {
                transform: scale(25, 25);
                opacity: 1;
            }
            100% {
                opacity: 0;
                transform: scale(40, 40);
            }
        }

        @keyframes scoreBounce {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }

        @keyframes servicePulse {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }

        @keyframes fadeInOut {
            0% { opacity: 0.7; }
            50% { opacity: 1; }
            100% { opacity: 0.7; }
        }

        /* Badminton shuttlecock icon animation */
        .shuttlecock {
            display: inline-block;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }
    </style>
</head>
<body>
    <!-- Overlay for sidebar -->
    <div class="overlay" id="overlay"></div>

    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <div class="logo">
                <i class="fas fa-table-tennis shuttlecock"></i>
                <span>Badminton Referee</span>
            </div>
        </div>
        <div class="sidebar-menu">
            <div class="menu-item active" data-page="dashboard">
                <i class="fas fa-home"></i>
                <span>Home</span>
            </div>
            <div class="menu-item" data-page="completed-matches">
                <i class="fas fa-history"></i>
                <span>Completed Matches</span>
            </div>
            <div class="menu-item logout-btn" id="logout-btn">
                <i class="fas fa-sign-out-alt"></i>
                <span>Log Out</span>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content" id="main-content">
        <!-- Header -->
        <div class="header">
            <div class="menu-toggle" id="menu-toggle">
                <i class="fas fa-bars"></i>
            </div>
            <div class="page-title">Badminton Referee Dashboard</div>
        </div>

        <!-- Content Area -->
        <div class="content">
            <!-- Dashboard Page -->
            <div id="dashboard-page">

                <!-- Current Match Section -->
                <div class="section current-match" id="currentMatchSection">
                    <!-- Content will be dynamically inserted here -->
                </div>

                <!-- Upcoming Matches Section -->
                <div class="section" id="upcomingMatchesSection">
                    <div class="section-header">
                        <div class="section-title">Upcoming Matches</div>
                        <div class="section-actions">
                            <div class="search-box">
                                <i class="fas fa-search search-icon"></i>
                                <input type="text" placeholder="Search matches..." id="search-matches">
                            </div>
                        </div>
                    </div>

                    <!-- Filter Bar -->
                    <div class="filter-bar">
                        <div class="filter-group">
                            <div class="filter-label">Match Type</div>
                            <select id="match-type-filter">
                                <option value="all">All Types</option>
                                <option value="Boys Singles">Boys Singles</option>
                                <option value="Girls Singles">Girls Singles</option>
                                <option value="Boys Doubles">Boys Doubles</option>
                                <option value="Girls Doubles">Girls Doubles</option>
                            </select>
                        </div>
                    </div>

                    <!-- Match Cards -->
                    <div class="match-cards" id="matches-container">
                        <!-- Match cards will be dynamically inserted here -->
                    </div>
                </div>
            </div>

            <!-- Completed Matches Page -->
            <div id="completed-matches-page" style="display: none;">
                <div class="section">
                    <div class="section-header">
                        <div class="section-title">Completed Matches</div>
                    </div>
                    <div class="table-container">
                        <table>
                            <thead>
                                <tr>
                                    <th>Match ID</th>
                                    <th>Players</th>
                                    <th>Winner</th>
                                    <th>Score</th>
                                    <th>Type</th>
                                </tr>
                            </thead>
                            <tbody id="completed-matches-table">
                                <!-- Completed matches will be dynamically inserted here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Scorecard Page -->
            <div id="scorecard-page" style="display: none;">
                <div class="section">
                    <div class="section-header">
                        <div class="section-title">Match Scorecard</div>
                    </div>
                    
                    <div class="match-info">
                        <div class="info-item">
                            <span class="info-label">Court</span>
                            <span class="info-value" id="scorecard-court">2</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Sets</span>
                            <span class="info-value" id="scorecard-sets">3</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Points</span>
                            <span class="info-value" id="scorecard-points">21</span>
                        </div>
                    </div>

                    <div class="players-container">
                        <div class="player-card" id="player1-card">
                            <div class="service-indicator" id="player1-service">
                                <i class="fas fa-circle"></i>
                            </div>
                            <div class="player-name">John Smith</div>
                            <div class="player-score" id="player1-score">0</div>
                            <div class="score-controls">
                                <button class="btn btn-primary" id="player1-increase">
                                    <i class="fas fa-plus"></i>
                                </button>
                                <button class="btn btn-secondary" id="player1-decrease">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                        
                        <div class="player-card" id="player2-card">
                            <div class="service-indicator" id="player2-service">
                                <i class="fas fa-circle"></i>
                            </div>
                            <div class="player-name">Mike Johnson</div>
                            <div class="player-score" id="player2-score">0</div>
                            <div class="score-controls">
                                <button class="btn btn-primary" id="player2-increase">
                                    <i class="fas fa-plus"></i>
                                </button>
                                <button class="btn btn-secondary" id="player2-decrease">
                                    <i class="fas fa-minus"></i>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div class="advantage-message" id="advantage-message" style="display: none;">
                        Advantage Player 1
                    </div>

                    <div class="sets-container">
                        <h3 class="sets-title">Sets History</h3>
                        <table class="sets-table">
                            <thead>
                                <tr>
                                    <th>Set</th>
                                    <th>Player 1</th>
                                    <th>Player 2</th>
                                    <th>Winner</th>
                                </tr>
                            </thead>
                            <tbody id="sets-table-body">
                            </tbody>
                        </table>
                    </div>

                    <div class="game-controls">
                        <button class="btn btn-success" id="new-set-btn" style="display: none;">
                            Start New Set
                        </button>
                        <button class="btn btn-danger" id="reset-match-btn">
                            End Match
                        </button>
                    </div>
                </div>
            </div>
           
        </div>
    </div>

    <!-- Start Match Modal -->
    <div class="modal-overlay" id="start-match-modal">
        <div class="modal">
            <span class="close-modal">&times;</span>
            <h2 class="modal-title" id="modal-match-title">Match <span id="modal-match-number"></span></h2>
            
            <div id="match-players-info">
                <!-- Player/Team info will be inserted here -->
            </div>
            <form id="match-setup-form">
                <input type="hidden" id="selected-match-id">
                <div class="form-group">
                    <label for="max-points">Max Set Points</label>
                    <select class="form-control" id="max-points" required>
                        <option value="11">11 Points</option>
                        <option value="15" selected>15 Points</option>
                        <option value="21">21 Points</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="number-of-sets">Number of Sets</label>
                    <select class="form-control" id="number-of-sets" required>
                        <option value="1">1 Set</option>
                        <option value="3" selected>3 Sets</option>
                        <option value="5">5 Sets</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="court-number">Court Number</label>
                    <select class="form-control" id="court-number" required>
                        <option value="1">Court 1</option>
                        <option value="2">Court 2</option>
                        <option value="3">Court 3</option>
                        <option value="4">Court 4</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="first-server">First Server</label>
                    <select class="form-control" id="first-server" required>
                        <!-- Options will be dynamically populated -->
                    </select>
                </div>
                <button type="button" class="btn btn-primary" id="confirm-start-btn">Start Match</button>
            </form>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal-overlay" id="confirmation-modal">
        <div class="modal">
            <h2 class="modal-title">Confirm Match Start</h2>
            <div class="confirmation-dialog">
                <p>Are you sure you want to start this match with the following settings?</p>
                <div id="confirmation-details">
                    <!-- Details will be inserted here -->
                </div>
                <div class="confirmation-buttons">
                    <button class="btn btn-cancel" id="cancel-start-btn">Cancel</button>
                    <button class="btn btn-confirm" id="final-start-btn">Start Match</button>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        // JavaScript updates for animations
        document.addEventListener('DOMContentLoaded', function() {
            // Add animation to score updates
            function animateScore(element) {
                element.classList.add('score-change');
                setTimeout(() => {
                    element.classList.remove('score-change');
                }, 500);
            }

            // Update the score increase functions to include animation
            const originalPlayer1Increase = elements.player1Increase.onclick;
            elements.player1Increase.onclick = function() {
                if (originalPlayer1Increase) originalPlayer1Increase();
                animateScore(elements.player1Score);
            };

            const originalPlayer2Increase = elements.player2Increase.onclick;
            elements.player2Increase.onclick = function() {
                if (originalPlayer2Increase) originalPlayer2Increase();
                animateScore(elements.player2Score);
            };

            // Add animation to match cards when they appear
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.animation = 'fadeIn 0.5s ease-out forwards';
                    }
                });
            }, observerOptions);

            // Observe match cards for animation
            document.querySelectorAll('.match-card').forEach(card => {
                observer.observe(card);
            });
        });
    </script>
    <script src="/js/refree.js"></script>
</body>
</html>